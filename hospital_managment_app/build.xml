<project name="HospitalApp" default="test" basedir=".">
    <!-- 1. Ścieżki -->
    <property name="src.dir"        value="src/main/java"/>
    <property name="test.src.dir"   value="src/test/java"/>
    <property name="build.dir"      value="build/classes"/>
    <property name="test.build.dir" value="build/test-classes"/>
    <property name="reports.dir"    value="build/reports"/>
    <property name="html.dir"       value="build/reports/html"/>
    <property name="lib.dir"        value="lib"/>

    <!-- 2. Classpath z JAR-ami w lib/ -->
    <path id="compile.classpath">
        <!-- Użycie pełnej ścieżki do folderu lib -->
        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <!-- 3. Kompilacja kodu produkcyjnego -->
    <target name="compile">
        <echo>=== Kompilacja src/main/java ===</echo>
        <mkdir dir="${build.dir}"/>
        <javac srcdir="${src.dir}"
               destdir="${build.dir}"
               includeantruntime="false"
               classpathref="compile.classpath"/>
    </target>

    <!-- 4. Kompilacja testów (zależna od compile) -->
    <target name="compile-tests" depends="compile">
        <echo>=== Kompilacja src/test/java ===</echo>
        <mkdir dir="${test.build.dir}"/>
        <javac srcdir="${test.src.dir}"
               destdir="${test.build.dir}"
               includeantruntime="false">
            <classpath>
                <path refid="compile.classpath"/>
                <pathelement path="${build.dir}"/>
            </classpath>
        </javac>
    </target>

    <!-- 5. Uruchomienie testów JUnit 4 i generowanie raportów -->
    <target name="test" depends="compile-tests">
        <echo>=== Uruchamianie testów ===</echo>
        <mkdir dir="${reports.dir}"/>
        <mkdir dir="${html.dir}"/>
        <junit printsummary="yes" haltonfailure="no" fork="yes">
            <classpath>
                <pathelement path="${build.dir}"/>
                <pathelement path="${test.build.dir}"/>
                <path refid="compile.classpath"/>
            </classpath>
            <formatter type="xml"/>
            <batchtest todir="${reports.dir}">
                <fileset dir="${test.build.dir}">
                    <include name="**/*Test.class"/>
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="${html.dir}">
            <fileset dir="${html.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
         <!--   <report format="frames"/> Do dokonczenia, po odkomentowaniu tworzy pliki w glownym katalogu-->
        </junitreport>
    </target>

    <!-- 6. Budowanie JAR-a -->
    <target name="jar" depends="compile">
        <echo>=== Tworzenie JAR-a ===</echo>
        <mkdir dir="dist"/>
        <jar destfile="dist/${ant.project.name}.jar" basedir="${build.dir}">
            <manifest>
                <!-- Zmień na swoją klasę z metodą main -->
                <attribute name="Main-Class" value="hospital_managment_app.Hospital_managment_app"/>
            </manifest>
        </jar>
    </target>

    <!-- 7. Uruchomienie aplikacji -->
    <target name="run" depends="compile">
        <echo>=== Uruchamianie aplikacji ===</echo>
        <java classname="hospital_managment_app.Hospital_managment_app" fork="true">
            <classpath>
                <pathelement path="${build.dir}"/>
                <path refid="compile.classpath"/>
            </classpath>
        </java>
    </target>

    <!-- 8. Sprzątanie -->
    <target name="clean">
        <echo>=== Czyszczenie build/ i dist/ ===</echo>
        <delete dir="${build.dir}"/>
        <delete dir="${test.build.dir}"/>
        <delete dir="${reports.dir}"/>
        <delete dir="dist"/>
    </target>
</project>
